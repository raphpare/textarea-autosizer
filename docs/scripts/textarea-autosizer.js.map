{
  "version": 3,
  "sources": ["../../src/index.ts"],
  "sourcesContent": ["export interface TextareaAutosizerOptions {\r\n    minHeight?: number;\r\n    maxHeight?: number;\r\n}\r\n\r\nexport class TextareaAutosizer {\r\n    #refTextarea: HTMLTextAreaElement | null = null;\r\n    #resizeObserver: ResizeObserver | null = null;\r\n    #resizeListener: () => void;\r\n\r\n    constructor() {\r\n        this.#resizeListener = this.#resizeTextarea.bind(this);\r\n        if (typeof window !== 'undefined' && window.Math === Math && typeof window.ResizeObserver !== 'undefined') {\r\n            this.#resizeObserver = new ResizeObserver(this.#resizeListener);\r\n        }\r\n    }\r\n\r\n    set(element: HTMLTextAreaElement, options: TextareaAutosizerOptions): TextareaAutosizer {\r\n        this.#refTextarea = element;\r\n\r\n        this.updateOptions(options);\r\n        \r\n        this.#refTextarea.addEventListener('input', this.#resizeListener);\r\n\r\n        if (this.#resizeObserver) {\r\n            this.#resizeObserver.observe(this.#refTextarea);\r\n        } else {\r\n            window.addEventListener('resize', this.#resizeListener);\r\n        }\r\n        \r\n        return this;\r\n    }\r\n\r\n    updateOptions(options: TextareaAutosizerOptions): void {\r\n        if(options.minHeight) {\r\n            this.#refTextarea.style.minHeight = `${options.minHeight}px`;\r\n        }\r\n\r\n        if(options.maxHeight) {\r\n            this.#refTextarea.style.maxHeight = `${options.maxHeight}px`;\r\n        }\r\n\r\n        this.#resizeTextarea();\r\n    }\r\n    \r\n    remove(): TextareaAutosizer {\r\n        this.#refTextarea.removeEventListener('input', this.#resizeListener);\r\n\r\n        if (this.#resizeObserver) {\r\n            this.#resizeObserver.unobserve(this.#refTextarea);\r\n        } else {\r\n            window.removeEventListener('resize', this.#resizeListener);\r\n        }\r\n\r\n        this.#refTextarea.style.removeProperty('height');\r\n        this.#refTextarea.style.removeProperty('min-height');\r\n        this.#refTextarea.style.removeProperty('max-height');\r\n        this.#refTextarea.style.removeProperty('overflow-y');\r\n\r\n        return this;\r\n    }\r\n    \r\n    #resizeTextarea(): void {\r\n        if (!this.#refTextarea || this.#refTextarea.tagName !== 'TEXTAREA') return;\r\n\r\n        this.#refTextarea.style.overflowY = 'hidden';\r\n        this.#refTextarea.style.height = '0';\r\n\r\n        const elementComputedStyle = window.getComputedStyle(this.#refTextarea);\r\n        \r\n        const currentHeight = this.#refTextarea.scrollHeight + parseInt(\r\n            elementComputedStyle.height,\r\n            10\r\n        ) - this.#refTextarea.clientHeight;\r\n\r\n        if (currentHeight < 0) return;\r\n\r\n        const maxHeight = parseInt(\r\n            elementComputedStyle.maxHeight,\r\n            10\r\n        );\r\n\r\n        if (maxHeight && currentHeight >= maxHeight) {\r\n            this.#refTextarea.style.overflowY = 'auto';\r\n        }\r\n\r\n        this.#refTextarea.style.height = `${currentHeight}px`;\r\n    } \r\n}\r\n\r\nexport const setTextareaAutosizer = (\r\n    element: HTMLTextAreaElement,\r\n    options: TextareaAutosizerOptions\r\n) => new TextareaAutosizer().set(element, options);\r\n"],
  "mappings": "qYAAA,IAAAA,EAAAC,EAAAC,EAAAC,EAAAC,EAKaC,EAAN,KAAwB,CAK3B,aAAc,CAoDdC,EAAA,KAAAH,GAxDAG,EAAA,KAAAN,EAA2C,MAC3CM,EAAA,KAAAL,EAAyC,MACzCK,EAAA,KAAAJ,EAAA,QAGIK,EAAA,KAAKL,EAAkBM,EAAA,KAAKL,EAAAC,GAAgB,KAAK,IAAI,GACjD,OAAO,QAAW,aAAe,OAAO,OAAS,MAAQ,OAAO,OAAO,gBAAmB,aAC1FG,EAAA,KAAKN,EAAkB,IAAI,eAAeQ,EAAA,KAAKP,EAAe,EAEtE,CAEA,IAAIQ,EAA8BC,EAAsD,CACpF,OAAAJ,EAAA,KAAKP,EAAeU,GAEpB,KAAK,cAAcC,CAAO,EAE1BF,EAAA,KAAKT,GAAa,iBAAiB,QAASS,EAAA,KAAKP,EAAe,EAE5DO,EAAA,KAAKR,GACLQ,EAAA,KAAKR,GAAgB,QAAQQ,EAAA,KAAKT,EAAY,EAE9C,OAAO,iBAAiB,SAAUS,EAAA,KAAKP,EAAe,EAGnD,IACX,CAEA,cAAcS,EAAyC,CAChDA,EAAQ,YACPF,EAAA,KAAKT,GAAa,MAAM,UAAY,GAAGW,EAAQ,eAGhDA,EAAQ,YACPF,EAAA,KAAKT,GAAa,MAAM,UAAY,GAAGW,EAAQ,eAGnDH,EAAA,KAAKL,EAAAC,GAAL,UACJ,CAEA,QAA4B,CACxB,OAAAK,EAAA,KAAKT,GAAa,oBAAoB,QAASS,EAAA,KAAKP,EAAe,EAE/DO,EAAA,KAAKR,GACLQ,EAAA,KAAKR,GAAgB,UAAUQ,EAAA,KAAKT,EAAY,EAEhD,OAAO,oBAAoB,SAAUS,EAAA,KAAKP,EAAe,EAG7DO,EAAA,KAAKT,GAAa,MAAM,eAAe,QAAQ,EAC/CS,EAAA,KAAKT,GAAa,MAAM,eAAe,YAAY,EACnDS,EAAA,KAAKT,GAAa,MAAM,eAAe,YAAY,EACnDS,EAAA,KAAKT,GAAa,MAAM,eAAe,YAAY,EAE5C,IACX,CA4BJ,EAlFIA,EAAA,YACAC,EAAA,YACAC,EAAA,YAsDAC,EAAA,YAAAC,EAAe,UAAS,CACpB,GAAI,CAACK,EAAA,KAAKT,IAAgBS,EAAA,KAAKT,GAAa,UAAY,WAAY,OAEpES,EAAA,KAAKT,GAAa,MAAM,UAAY,SACpCS,EAAA,KAAKT,GAAa,MAAM,OAAS,IAEjC,IAAMY,EAAuB,OAAO,iBAAiBH,EAAA,KAAKT,EAAY,EAEhEa,EAAgBJ,EAAA,KAAKT,GAAa,aAAe,SACnDY,EAAqB,OACrB,EACJ,EAAIH,EAAA,KAAKT,GAAa,aAEtB,GAAIa,EAAgB,EAAG,OAEvB,IAAMC,EAAY,SACdF,EAAqB,UACrB,EACJ,EAEIE,GAAaD,GAAiBC,IAC9BL,EAAA,KAAKT,GAAa,MAAM,UAAY,QAGxCS,EAAA,KAAKT,GAAa,MAAM,OAAS,GAAGa,KACxC,EAGG,IAAME,EAAuB,CAChCL,EACAC,IACC,IAAIN,EAAkB,EAAE,IAAIK,EAASC,CAAO",
  "names": ["_refTextarea", "_resizeObserver", "_resizeListener", "_resizeTextarea", "resizeTextarea_fn", "TextareaAutosizer", "__privateAdd", "__privateSet", "__privateMethod", "__privateGet", "element", "options", "elementComputedStyle", "currentHeight", "maxHeight", "setTextareaAutosizer"]
}
